
in real time

we had 3 stages to create a infrastrcture

1 -->
git repo + packer.json + *.tf files 

2 -->
run packer for custom ami
3 -->
deploy infra using terraform


above stages we don't do in manually for automation purpose we need one tool that tool is jenkins or azue devops


before we going jenkins we need to know packer
ref url:https://www.packer.io/

download packer
sample code realtime packer :
ref url: https://github.com/rajeshsingamsetti/Devopscompletetuts/blob/main/sir-terraform-packer-jenkins/packer.json

***** why we need packers meanes
to create only an image or ami (it's diff between packer and terraform will create overall infrastrcture)
image creation means

first ec2 machine will crete after update after stop after it will create one ami (but using this ami packer won't create another ami it will done by terraform)

terraform will use the machine image of created by packer
lets start with packer install on mac or linux
locate into 
cd /usr/local/bin
wget https://releases.hashicorp.com/packer/1.6.5/packer_1.6.5_darwin_amd64.zip


sample packer.json file will be like this

{
    "_comment" : "Create a AWS AMI ith AMZ Linux 2018 with Java and Tomcat",
    "variables": {
      "aws_access_key": "AKIAQ5WQEB7SM6PIJRX6",
      "aws_secret_key": "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",
      "region": "us-east-1",
      "source_ami":"ami-04d29b6f966df1537",
      "instance_type":"t2.micro",
      "vpc_id": "vpc-0d143ca90e92391ad",
      "subnet_id": "subnet-07cd6a2096d287466"
    },
    "_comment1" : "packer build -var \"aws_secret_key=foo\" template.json",
    "_comment2" : "packer build -var-file creds.json template.json",
    "builders": [{
      "access_key": "AKIAQ5WQEB7SM6PIJRX6",
      "secret_key": "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",
      "type": "amazon-ebs",
      "region": "{{user `region`}}",
      "source_ami": "ami-04d29b6f966df1537",
      "instance_type": "t2.micro",
      "ssh_username": "ec2-user",
      "ami_name": "DevOpsClass-Build-{{isotime | clean_resource_name}}",
      "vpc_id": "vpc-0d143ca90e92391ad",
      "subnet_id": "subnet-07cd6a2096d287466",
      "tags": {
        "Name": "DevOpsClass-Build-{{isotime | clean_resource_name}}"
      }
    }],
    "provisioners": [{
      "type": "shell",
      "inline": [
        "sleep 30",
        "sudo yum update -y",
        "sudo yum install httpd -y",
        "sudo yum install git -y",
        "sudo git clone https://github.com/mavrick202/webhooktesting.git",
        "sudo cp webhooktesting/index.html /var/www/html/index.html",
        "sudo cp webhooktesting/style.css /var/www/html/style.css",
        "sudo cp webhooktesting/scorekeeper.js /var/www/html/scorekeeper.js",
        "sudo service httpd start"
        ]
    }]
  }


here we need to change the ami number and region & instance type will t2.micro

after adding the access and secreat key we need to follow below procedure

give source ami,instance type:
"source_ami": "ami-04d29b6f966df1537",
"instance_type": "t2.micro",

packer validate packer.json (to validate packer.json)
if u had any errors it will show if u don't have it will show nothing

to build  packer

packer build -var=aws_access_key=AKIAQ5WQEB7SMCSE2CI6 -var=aws_secret_key=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 packer.json

we will see ec2 will create according to packer.json requirememt after it will create ami image and after instance will delete automatically

packer build packer.json
** after build successfull ami now we are going to install jenkins
take one ubuntu 18.04 server

Now we are going 






